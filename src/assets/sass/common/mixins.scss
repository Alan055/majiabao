@charset "UTF-8";
//-----------------------------------------------------
// mixin scss
// mixin，通过@include调用，样式通过拷贝的方式使用，尤其适用于传递参数
// %，通过@extend调用，样式通过组合申明的方式使用，适用于不传参数的代码片段


// clearfix
@mixin clearfix($extend: true) {
  @if $extend {
    @extend %clearfix;
  }
  @else {
    &:before,
    &:after {
      content: "";
      display: table;
    }
    &:after {
      clear: both;
    }
  }
}

%clearfix {
  @include clearfix(false);
}


// Hide from both screenreaders and browsers: h5bp.com/u
// 既隐藏于视觉也隐藏于屏幕浏览器
@mixin hidden($extend: true) {
  @if $extend {
    @extend %hidden;
  }
  @else {
    display: none !important;
    visibility: hidden;
  }
}

%hidden {
  @include hidden(false);
}

// Hide only visually, but have it available for screenreaders
// 只隐藏于视觉，屏幕浏览器可以阅读
@mixin hidden-visually($extend: true) {
  @if $extend {
    @extend %visually-hidden;
  }
  @else {
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px); //standard
  }
}

%hidden-visually {
  @include hidden-visually(false);
}


// justify
@mixin justify($extend: true) {
  @if $extend {
    @extend %justify;
  }
  @else {
    display: flex;
    justify-content: space-between;
  }
}

%justify {
  @include justify(false);
}

// mixin
// 只定义了mixin，所以只能通过@include来调用
//-----------------------------------------------------
// table 等分
@mixin equal-table($children: li) {
  display: table;
  table-layout: fixed;
  width: 100%;
  $childrenEle: li div p a span strong;
  @if index($childrenEle, $children) {
    #{$children} {
      display: table-cell;
    }
  }
  @else {
    .#{$children} {
      display: table-cell;
    }
  }
}

// flex 等分
@mixin equal-flex($children: li) {
  display: flex;
  $childrenEle: li div p a span strong;
  @if index($childrenEle, $children) {
    #{$children} {
      flex: 1;
    }
  }
  @else {
    .#{$children} {
      flex: 1;
    }
  }
}

// flex center
@mixin center-flex($direction: both) {
  display: flex;
  @if $direction==both {
    justify-content: center;
    align-items: center;
  }
  @else if $direction==x {
    justify-content: center;
  }
  @else if $direction==y {
    align-items: center;
  }
}

// translate center
@mixin center-translate($direction: both) {
  position: absolute;
  @if $direction==both {
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
  }
  @else if $direction==x {
    left: 50%;
    transform: translate3d(-50%, 0, 0);
  }
  @else if $direction==y {
    top: 50%;
    transform: translate3d(0, -50%, 0);
  }
}

// triangle 三角箭头
%triangle-basic {
  content: "";
  height: 0;
  width: 0;
  overflow: hidden;
}

@mixin triangle($direction: top, $borderWidth: 6px, $borderColor: $gray) {
  @extend %triangle-basic;
  @if $direction==top {
    border-bottom: $borderWidth solid $borderColor;
    border-left: $borderWidth dashed transparent;
    border-right: $borderWidth dashed transparent;
  }
  @else if $direction==right {
    border-left: $borderWidth solid $borderColor;
    border-top: $borderWidth dashed transparent;
    border-bottom: $borderWidth dashed transparent;
  }
  @else if $direction==bottom {
    border-top: $borderWidth solid $borderColor;
    border-left: $borderWidth dashed transparent;
    border-right: $borderWidth dashed transparent;
  }
  @else if $direction==left {
    border-right: $borderWidth solid $borderColor;
    border-top: $borderWidth dashed transparent;
    border-bottom: $borderWidth dashed transparent;
  }
}

// arrow 方向箭头
@mixin arrow($size: 10px, $direction: right, $borderWidth: 2px, $borderColor: $gray) {
  display: inline-block;
  vertical-align: middle;
  width: $size;
  height: $size;
  @if $direction==top {
    border-top: $borderWidth solid $borderColor;
    border-right: $borderWidth solid $borderColor;
    transform: rotate(-45deg);
  }
  @else if $direction==right {
    border-top: $borderWidth solid $borderColor;
    border-right: $borderWidth solid $borderColor;
    transform: rotate(45deg);
  }
  @else if $direction==bottom {
    border-left: $borderWidth solid $borderColor;
    border-bottom: $borderWidth solid $borderColor;
    transform: rotate(-45deg);
  }
  @if $direction==left {
    border-left: $borderWidth solid $borderColor;
    border-bottom: $borderWidth solid $borderColor;
    transform: rotate(45deg);
  }
}


// http://www.css3files.com/font/
// 1 The eot fontfile. Can be omitted if you don`t want to support Internet Explorer prior to version 9 (including semicolon).
// 2 Can also be omitted for Internet Explorer < 9. ?iefix prevents IE6 from interpreting all of the following. If the whole IE family (6 to 9) should be supported, 1 and 2 are needed.
// 3 Can be omitted if iPad versions prior to iOS 4.2 shouldn’t be supported.
// 4 The ttf fontfile. Necessary to support (Mobile) Safari and Opera.
// 5 The woff fontfile for all modern browsers (best choice).
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;
    src: url("#{$file-path}.eot"); // 1
    src: url("#{$file-path}.eot?#iefix") format("eot"),
    url("#{$file-path}.svg##{$font-family}") format("svg"),
    url("#{$file-path}.woff") format("woff"),
    url("#{$file-path}.ttf") format("truetype");
  }
}

// %
// 只定义了%，所以只能通过@extend来调用
//-----------------------------------------------------
// scrolling touch
%scroll-touch {
  overflow-y: auto; // pc上浏览
  -webkit-overflow-scrolling: touch;
  overflow-scrolling: touch;
}

// Text overflow
// 元素可以设置宽度才可应用省略号
%ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 等分列
// 可以使用equal-flex或equal-table，默认子元素为li
%equal-col {
  @include equal-table;
}

// item arrow, 右侧箭头跳转指向
%item-arrow {
  &::after {
    content: "";
    @include arrow;
    position: absolute;
    right: 15px;
    top: 50%;
    margin-top: -1px;
    transform: rotate(45deg) translateY(-50%);
    box-sizing: border-box;
  }
}

//-----flex横排---
%flex-row {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  text-align: center;
}

%flex-item {
  flex: 1;
  text-align: center;
}


@svg borderH {
    height: 2px;
    @rect {
        fill: var(--color, black);
        width: 100%;
        height: 50%;
    }
}
@svg borderV {
    width: 2px;
    @rect {
        fill: var(--color, black);
        width: 50%;
        height: 100%;
    }
}

//通用的1px边框
@mixin onePxBorder($color: $borderColor) {
    border: 1PX solid $color;

    @media screen and (-webkit-min-device-pixel-ratio: 2) {
        border: 0.5PX solid $color;
    }

    @media screen and (-webkit-min-device-pixel-ratio: 3) {
        border: 0.333333PX solid $color;
    }
}
//----水平1像素线----
@mixin borderH($color: $borderColor) {
    border-style: solid;
    border-color: $color;
    border-image: svg(borderH param(--color $color)) 2 stretch;
}
//----垂直1像素线----
@mixin borderV($color: $borderColor) {
    border-style: solid;
    border-color: $color;
    border-image: svg(borderV param(--color $color)) 2 stretch;
}

%border-b{
  @include borderH();
  border-width: 0 0 1px 0; /*no*/
}
%border-t{
  @include borderH();
  border-width: 1px 0 0 0; /*no*/
}
%border-l{
  @include borderV();
  border-width: 0 0 0 1px; /*no*/
}
%border-r{
  @include borderV();
  border-width: 0 1px 0 0; /*no*/
}


@mixin size($size) {
  width: $size;
  height: $size;
}

@mixin circle($size) {
  @include size($size);
  border-radius: $size;
}

%absolute {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
